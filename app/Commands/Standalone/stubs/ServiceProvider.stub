<?php

namespace StudlyDummyVendor\StudlyDummyPackageName;

use Pixel\Support\ServiceProvider;
use Pixel\Support\Contracts\Packagable;

class StudlyDummyPackageNameServiceProvider extends ServiceProvider implements Packagable
{
	public $package = 'StudlyDummyPackageName';

	public $package_commands = [
		// Ej. 
		// StudlyDummyVendor\StudlyDummyPackageName\Console\Commands\CustomCommands::class,
	];

	public $package_schedules = [
		// Ej. 
		// 'custom:artisan-command --params x' => ['daily'],
		// 'another:artisan-command' => ['dailyAt', '13:00'],
	];

	public $package_routers = [
		// Ej. 
		// 'Routes/web.php' => [
		// 	'prefix' => '/',
		// 	'namespace' => 'StudlyDummyVendor\StudlyDummyPackageName\Http\Controllers',
		// 	'middleware' => 'web',
		// ]
		
		'Routes/web.php' => [
			'namespace' => 'StudlyDummyVendor\StudlyDummyPackageName\Http\Controllers',
			'middleware' => 'web',
		],
		'Routes/api.php' => [
			'prefix' => '/api/v1/LowerCaseDummyPackageName',
			'namespace' => 'StudlyDummyVendor\StudlyDummyPackageName\Http\Controllers',
			'middleware' => 'api',
		]
	];

	public $package_rules = [
		// Ej. 
		// 'rule_name' => StudlyDummyVendor\StudlyDummyPackageName\Rules\CustomRule::class
	];

	/**
	 * Excecute after service provider booted
	 *
	 * @return void
	 */
	public function onBoot()
	{
		
	}

	/**
	 * Excecute after service provider registered
	 *
	 * @return void
	 */
	public function onRegister()
	{
		
	}
}